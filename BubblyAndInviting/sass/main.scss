/* colors
#E27D60
#E8A87C
#C38D9E
#AFD27F
#85DCB3
#FEF9C7
#41B3A3
#C2CAD0
#C2B9B0
*/

// COLORS
$color-primary: #85DCB3;
$color-primary-light: #AFD27F;
$color-primary-dark: #41B3A3;

$color-grey-light-1: #f7f7f7;
$color-grey-light-2: #eee;

$color-white: #fff;
$color-black: #000;

@keyframes moveInLeft {
    0% {
      opacity: 0;
      transform: translateX(-10rem); }
    80% {
      transform: translateX(1rem); }
    100% {
      opacity: 1;
      transform: translate(0); } 
}
  
@keyframes moveInRight {
    0% {
      opacity: 0;
      transform: translateX(10rem); }
    80% {
      transform: translateX(-1rem); }
    100% {
      opacity: 1;
      transform: translate(0); } 
}
  
@keyframes moveInButton {
    0% {
      opacity: 0;
      transform: translateY(3rem); }
    100% {
      opacity: 1;
      transform: translate(0); } 
}

/* universal selector */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* box-sizing changes the box model so borders and paddings aren't added */
  box-sizing: inherit; 
}

/* If you don't want your default font size to be 16px, you can change that by dividing what you want. In this case, I want 10px as my default, so I will simply do 16/10 tp get .625 and multiply that by 100 to get 62.5% */
html {
    font-size: 62.5%;
}

body {
    font-family: "Roboto Condensed", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    padding: 2rem;
}

.header {
    text-transform: uppercase;
    background-image: linear-gradient(to right, rgba(65, 179, 163, 0.5), rgba(133, 220, 179, 0.8)), url(../img/bia-andrade-PO8Woh4YBD8-unsplash.jpg);
    height: 95vh;
    background-size: cover;
    background-position: top;
    position: relative;

    &__text-area {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
}


.heading-primary {
    text-align: center;
    color: white;
    margin-bottom: 3rem;

    &--main {
        display: block;
        font-size: 4rem;
        font-weight: 400;
        letter-spacing: 0.5rem;
        animation-name: moveInLeft;
        animation-duration: 1s;
        animation-timing-function: ease-out;
    }
    
    &--sub {
        display: block;
        font-size: 2.5rem;
        font-weight: 700;
        letter-spacing: 0.75rem;
        animation: moveInRight 1s ease-out; 
    }
}

.btn {
    // this translates to button element
    &,
    /* link is a psuedo class is a special state of a selector  */
    /* visited state is when the user has already clicked on the button before and sees it again */
    .btn:link,
    .btn:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 6rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .3s;
        position: relative;
        font-size: 1.6rem;
        border: none;
        cursor: pointer; 
    }

    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba(0, 0, 0, .3);

        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
        
    }

    &:active {
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .3)
    }

    &--white {
        background-color: $color-white;
        color: $color-primary-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        /* z-index defines the position of the element if they are one on top of another */
        z-index: -1;
        transition: all .4s;
    }

    &--animated {
        animation: moveInButton .5s ease-out .75s;
        /* 0% styles on @keyframes moveInButton will be applied before the animation starts */
        animation-fill-mode: backwards;
    }
}

.row {
    /* max-width helps to adjust to any smaller screen */
    max-width: 114rem;
    margin: 0 auto;
}

/* ^ allows to select only the ones that start with "col-" */
[class^="col-"] {
    float: left; 
}

[class^="col-"]:not(:last-child) {
    margin-right: 6rem; 
}

.row::after {
    content: "";
    display: table;
    clear: both; 
}

/* this psuedo class specifies everything but the last row; you don't want the last row to have a margin-bottom */
.row:not(:last-child) {
    margin-bottom: 8rem; 
}

.col-1-of-2 {
    width: calc((100% - 6rem) / 2); 
}

.col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); 
}

.col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); 
}

.col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); 
}

.col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); 
}

.col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); 
}
